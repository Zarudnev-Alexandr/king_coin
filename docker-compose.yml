version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
      POSTGRES_DB: king_coin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  adminer:
    image: adminer
    restart: always
    ports:
      - "8090:8080"
    environment:
      ADMINER_DEFAULT_DB_DRIVER: pgsql

#  zookeeper:
#    image: 'bitnami/zookeeper:3.7.0'
#    container_name: zookeeper
#    ports:
#      - '2181:2181'
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes
#    volumes:
#      - ./kafka/bitnami/zookeeper:/kafka/bitnami/zookeeper
#    healthcheck:
#      test: ["CMD-SHELL", "echo ruok | nc -w 5 localhost 2181 | grep imok"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#      start_period: 30s
#
#  kafka:
#    image: 'bitnami/kafka:2.8.0'
#    container_name: kafka
#    ports:
#      - "9092:9092"
#      - "9093:9093"
#    expose:
#      - "9093"
#    environment:
#      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
#      - KAFKA_CREATE_TOPICS="kafka_capstone_event_bus:1:1"
#      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
#      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
#      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
#      - ALLOW_PLAINTEXT_LISTENER=yes
#    depends_on:
#      - zookeeper
#    volumes:
#      - ./kafka/bitnami/kafka:/kafka/bitnami/kafka
#    healthcheck:
#      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
#      interval: 10s
#      timeout: 10s
#      retries: 3
#      start_period: 30s
#
#  kafdrop:
#    image: obsidiandynamics/kafdrop
#    container_name: kafdrop
#    ports:
#      - "9000:9000"
#    environment:
#      - KAFKA_BROKERCONNECT=kafka:9092
#    depends_on:
#      kafka:
#        condition: service_healthy

  fastapi:
    build: .
    ports:
      - "8000:8000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
#      kafka:
#        condition: service_healthy
      db:
        condition: service_healthy

volumes:
  postgres_data:
